###CHILD CONVERSION EFFECTS###

child_cannibal_conversion_success_effect = {
	scope:guardian = {
		send_interface_toast = {
			title = child_cannibal_conversion_success_effect.desc
			left_icon = scope:child
		}
		scope:child = {
			give_cannibal_secret_or_trait_effect = yes
			random_secret = {
				limit = { secret_type = secret_cannibal }
				reveal_to = scope:guardian
			}
			add_opinion = {
				target = scope:guardian
				modifier = impressed_opinion
				opinion = 30
			}
		}
		scope:guardian = {
			random_secret = {
				limit = {
					NOT = { is_known_by = scope:child }
					secret_type = secret_guardian
				}
				reveal_to = scope:child
			}
			if = {
				limit = { this = root }
				hidden_effect = {
					add_opinion = {
						target = scope:child
						modifier = pleased_opinion
						opinion = 20
					}
				}
			}
			else = {
				add_opinion = {
					target = scope:child
					modifier = pleased_opinion
					opinion = 20
				}
			}
		}
	}
}

child_cannibal_conversion_failure_effect = {
	scope:guardian = {
		send_interface_toast = {
			title = child_cannibal_conversion_failure_effect.desc
			left_icon = scope:child
		}
		scope:child = {
		 	add_opinion = {
				target = scope:guardian
				modifier = suspicion_opinion
				opinion = -15
			}
		}
		scope:guardian = {
			if = {
				limit = { this = root }
				hidden_effect = {
					add_opinion = {
						target = scope:child
						modifier = disappointed_opinion
						opinion = -15
					}
				}
			}
			else = {
				add_opinion = {
					target = scope:child
					modifier = disappointed_opinion
					opinion = -15
				}
			}
		}
	}
}

child_cannibal_conversion_critical_failure_effect = {
	scope:guardian = {
		send_interface_toast = {
			title = child_cannibal_conversion_critical_failure_effect.desc
			left_icon = scope:child
		}
		scope:child = {
		 	add_opinion = {
				target = scope:guardian
				modifier = hate_opinion
				opinion = -30
			}
			scope:guardian = {
				random_secret = {
					limit = {
						secret_type = secret_cannibal
					}
					save_scope_as = guardian_cannibal_secret
					if = {
						limit = { NOT = { is_known_by = scope:child } }
						reveal_to = scope:child
					}
					if = {
						limit = {
							exists = scope:child.liege
							NOR = {
								is_known_by = scope:child.liege
								scope:child = { is_ruler = yes }
							}
						}
						scope:child.liege = {
							send_interface_message = {
								desc = child_cannibal_conversion_critical_failure_effect.liege.desc
								left_icon = scope:guardian
								right_icon = scope:child
								scope:guardian_cannibal_secret = { reveal_to = scope:child.liege }
							}
						}
					}
				}
			}
		}
		scope:guardian = {
			if = {
				limit = { this = root }
				hidden_effect = {
					add_opinion = {
						target = scope:child
						modifier = hate_opinion
						opinion = -30
					}
				}
			}
			else = {
				add_opinion = {
					target = scope:child
					modifier = hate_opinion
					opinion = -30
				}
			}
		}
	}
}

give_cannibal_secret_or_trait_effect = {
	save_temporary_scope_as = cannibal_character
	if = {
		limit = { #Not already a cannibal
			NOR = {
				has_trait = cannibal
				any_secret = { secret_type = secret_cannibal }
			}	
		}
		if = {
			limit = {
				trait_is_shunned_or_criminal_in_my_or_lieges_faith_trigger = { TRAIT = cannibal GENDER_CHARACTER = scope:cannibal_character }
			}
			add_secret = {
				type = secret_cannibal
			}
		}
		else = {
			add_trait = cannibal
		}
	}	
}

devour_prisoner_effect = {

	$VICTIM$ = {
		save_scope_as = victim
	}

	$EXECUTIONER$ = {
		save_scope_as = executioner
	}

	show_as_tooltip = {
		$VICTIM$ = {
			death = {
				death_reason = death_execution
				killer = $EXECUTIONER$
			}
		}
	}

	scope:executioner = {
		if = {
			limit = {
				OR = {
					#is_spouse_of = scope:victim
					is_close_family_of = scope:victim
					scope:victim = { tier_or_related_liege_tier_greater_or_equal_trigger = { TIER = tier_kingdom } } #Kingdom & empire
				}
			}
			add_dread = massive_dread_gain
		}
		else_if = {
			limit = {
				OR = {
					scope:victim = { tier_or_related_liege_tier_equal_trigger = { TIER = tier_duchy } }
					scope:victim = { tier_or_related_liege_tier_equal_trigger = { TIER = tier_county } }
				}
			}
			add_dread = major_dread_gain
		}
		else = {
			add_dread = medium_dread_gain
		}
		# Piety loss (or gain) from executions
		if = {
			limit = {
				faith = {
					has_doctrine = tenet_ritual_cannibalism
				}
			}
			scope:victim = {
				if = {
					limit = {
						OR = {
							highest_held_title_tier >= tier_empire
							any_close_family_member = {
								highest_held_title_tier >= tier_empire
							}
						}
					}
					scope:executioner = { add_piety = massive_piety_gain }
				}
				else_if = {
					limit = {
						OR = {
							highest_held_title_tier >= tier_kingdom
							any_close_family_member = {
								highest_held_title_tier >= tier_kingdom
							}
						}
					}
					scope:executioner = { add_piety = major_piety_gain }
				}
				else_if = {
					limit = {
						OR = {
							highest_held_title_tier >= tier_duchy
							any_close_family_member = {
								highest_held_title_tier >= tier_duchy
							}
						}
					}
					scope:executioner = { add_piety = medium_piety_gain }
				}
				else_if = {
					limit = {
						OR = {
							is_ruler = yes
							is_lowborn = no
							any_close_family_member = {
								is_ruler = yes
							}
						}
					}
					scope:executioner = { add_piety = minor_piety_gain }
				}
				else = {
					scope:executioner = { add_piety = miniscule_piety_gain }
				}
			}
		}
		else_if = {
			limit = {
				faith = scope:victim.faith
				NOT = { has_perk = divine_retribution_perk }
			}
			add_piety = major_piety_loss
		}
		# Stress loss		
		if = {
			limit = {
				has_trait = sadistic
			}
			stress_impact = {
				sadistic = medium_stress_impact_loss
			}
		}
		if = {
			limit = { #Killing infidels is relaxing
				has_trait = zealous
				NOT = { scope:executioner.faith = scope:victim.faith }
			}
			stress_impact = {
				zealous = minor_stress_impact_loss
			}
		}
		if = {
			limit = {
				has_relation_rival = scope:victim
			}
			add_prestige = major_prestige_gain
			if = {
				limit = {
					NOR = {
						has_trait = vengeful
						has_trait = forgiving
					}
				}
				add_stress = major_stress_loss
			}
			else = {
				stress_impact = {
					vengeful = massive_stress_impact_loss
					forgiving = 0 #No stress reduction
				}
			}
			
		}
		#Kinslaying
		add_kinslayer_trait_or_nothing_effect = { VICTIM = scope:victim }

		#Tyranny
		if = {
			limit = {
				exists = scope:recipient
				has_execute_reason = scope:victim
			}
			custom_tooltip = IS_ALLOWED_TO_DEVOUR_DESC
		}
		else_if = {
			limit = {
				OR = {
					AND = {
						has_execute_reason = scope:victim
						NOT = { exists = scope:recipient }
					}
					is_at_war_with = scope:victim
				}
			}
			custom_tooltip = IS_ALLOWED_TO_EXECUTE_NO_RECIPIENT_DESC
		}
		else_if = {
			limit = {
				scope:victim = {
					OR = {
						is_landed = no
						NOT = { is_of_major_or_minor_interest_trigger = { CHARACTER = scope:executioner } }
					}
				}
	   			scope:executioner.faith = {
	  				faith_hostility_level = {
	 					target = scope:victim.faith
						value > faith_astray_level
	 				}
				}
			}
			custom_tooltip = IS_ALLOWED_TO_DEVOUR_HOSTILE_RELIGION_DESC
		}
		else_if = {
			limit = {
				scope:victim = { target_is_liege_or_above = prev }
			}
			add_tyranny = 20	# Increased from 10 to 20 because you eat your vassal, duh
		}
		else_if = {
			limit = {
				scope:victim = {
					NOT = { exists = liege }
					exists = host
				}
				any_pool_guest = { count > 0 }
			}
			every_pool_guest = {
				limit = {
					NOR = {
						this = scope:victim
						is_in_list = guest_list
					}
				}
				add_to_temporary_list = guest_list
			}
			every_in_list = {
				list = guest_list
				custom = all_your_guests
				add_opinion = {
					target = prev
					modifier = devoured_guest_modifier
				}
			}
		}
		else = {
			if = {
				limit = {
					exists = scope:victim.liege
				}
				scope:victim.liege = {
					add_opinion = {
						target = prev
						modifier = devoured_my_countryman_modifier
					}
				}
			}
		}
	}

	devour_opinion_effect = { VICTIM = scope:victim EXECUTIONER = scope:executioner }

	hidden_effect = {
		$VICTIM$ = {
			death = {
				death_reason = death_execution
				killer = $EXECUTIONER$
			}
		}
	}
}
